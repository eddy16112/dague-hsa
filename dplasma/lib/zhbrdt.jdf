extern "C" %{
  /**
   * PLASMA include for defined and constants.
   *
   * @precisions normal z -> s d c
   *
   */
#include <plasma.h>
#include <core_blas.h>

#include "dague.h"
#include "data_distribution.h"
#include "data_dist/matrix/matrix.h"

#include "dplasmajdf.h"
%}

A          [type = "tiled_matrix_desc_t*"]
NT         [type = int
            hidden = on
            default="A->nt"]
NB         [type = int
            hidden = on
            default="A->nb"]

/*
 *
 */
in_dat(i)
  i = 1..(NT-1)

  : A(0,i)

  RW B <- A(0,i)
       -> B zhbrdt(0,0,i-1)
BODY
/* nothing */
  printlog("thread %d in_dat(%d, %d, %d) -> A[0, %d] = %p\n",
           context->eu_id, 0, 0, i, i+1, B);
END

/*
 *
 */
zhbrdt(s1,s,i)
  /* Execution space */
  s1 = 0..NT-2
  s = 0..NB-1
  i = s1..NT-2

  : A(0,i)

  /* A == data_A(0,i) */
  /* B == data_A(0,i+1) */

  RW    A <- (i==s1) & (0==s) & (0==i) ? A(0,i)
          <- (i==s1) & (0==s) & (i>=1) ? A zhbrdt(s1-1, NB-1, s1)
          <- (i==s1) & (s>=1)          ? A zhbrdt(s1, s-1, s1) 
          <- (s1<i)                    ? B zhbrdt(s1, s, i-1) 

          -> ((1+s)==NB) & (i==s1)     ? A(0,i)
          -> ((1+s)==NB) & ((1+s1)==i) ? A zhbrdt(s1+1, 0, s1+1)
          -> ((1+s)==NB) & ((1+s1)<i)  ? B zhbrdt(s1+1, 0, s1+1)
          -> (i==s1) & ((1+s)<NB)      ? A zhbrdt(s1, s+1, i)
          -> (i>s1)                    ? B zhbrdt(s1, s+1, i-1)

  RW    B <- (0==s) & (0==s1)          ? B in_dat(i+1)
          <- (0==s) & (NT==(2+i))      ? A zhbrdt_half(s1-1, NB-1) 
          <- (0==s)                    ? A zhbrdt(s1-1, NB-1, i+1)
          <- (s!=0) & (NT==(2+i))      ? A zhbrdt_half(s1, s-1) 
          <- ((i+2)==NT) & (s>=1)      ? B zhbrdt(s1, s-1, NT-2) 

          -> ((NT-2)==i)               ? A zhbrdt_half(s1, s)
          ->                             A zhbrdt(s1, s, i+1)
BODY


#line 7 "blg_chasing2.c"
#if 0
  CORE_zhbrdt(A /* A(0,i) */, B /* A(0,i+1) */, s1*NB+s, i%2);
#endif
  printlog("thread %d CORE_zhbrdt(s1 = %d, s = %d, i = %d)\n\t(A(%d,%d)[%p], A(%d,%d)[%p], s1*NB+s, i%2)\n",
  context->eu_id, s1, s, i, 0, i, A, 0, i+1, B);
END

/*
 *
 */
zhbrdt_half(s1,s)
  /* Execution space */
  s1 = 0..NT-1
  s = 0..NB-1

  : A(0,NT-1)

  /* A == data_A(0,i) */

  RW    A <- (0==s1) & (0==s)           ? B zhbrdt(s1, s, NT-2)
          <- ((NT-1)!=s1) & (0==s)      ? B zhbrdt(s1-1, NB-1, NT-2)
          <- ((NT-1)!=s1)               ? B zhbrdt(s1, s-1, NT-2)
          <- (0==s)                     ? A zhbrdt_half(s1-1, NB-1) : A zhbrdt_half(s1, s-1)
          -> ((NT-2)==s1) & ((NB-1)==s) ? A zhbrdt_half(s1+1, 0)
          -> ((NT-1)==s1) & ((NB-1)==s) ? A(0,NT-1)
          -> ((NT-1)==s1)               ? A zhbrdt_half(s1, s+1)
          -> ((NB-1)==s)                ? B zhbrdt(s1+1, 0, NT-2) : B zhbrdt(s1, s+1, NT-2)
BODY


#line 7 "blg_chasing2.c"
#if 0
  CORE_zhbrdt(A /* A(0,i) */, NULL, s1*NB+s, i%2);
#endif
  printlog("thread %d CORE_zhbrdt_half(s1 = %d, s = %d)\n\t(A(%d,%d)[%p], NULL, s1*NB+s, i%2)\n",
            context->eu_id, s1, s, 0, NT-1, A);
END
