extern "C" %{
  /**
   * PLASMA include for defined and constants.
   *
   * @precisions normal z -> s d c
   *
   */
  
#include <plasma.h>
#include <core_blas.h>

#include "dague.h"
#include "data_distribution.h"
#include "dplasma/lib/dplasmajdf.h"

%}

/** Globals */
A
L         [aligned = A]
IPIV      [aligned = A]
B

/* 
 * Parameters
 */
ib   [type = int]

Am   [type = int]
An   [type = int]
Amb  [type = int]
Anb  [type = int]
Amt  [type = int]
Ant  [type = int]

Lmb  [type = int]
Lnb  [type = int]

Bm   [type = int]
Bn   [type = int]
Bmb  [type = int]
Bnb  [type = int]
Bmt  [type = int]
Bnt  [type = int]
     
/**************************************************
 *                      ZGESSM                    *
 **************************************************/
zgessm_inAIPIV(k)  [profile = off]
k = 0..( (Amt < Ant) ? Amt-1 : Ant-1 )

:A(k, k)

READ A <- A(k, k)
       -> B zgessm(k, 0..Bnt-1) 
     IPIV <- IPIV(k, k)                               [type = PIVOT]
       -> A zgessm(k, 0..Bnt-1)                       [type = PIVOT]
     
BODY
        /* Nothing */
        printlog("thread %d zgessm_inAIPIV( %d )\n", 
                 context->eu_id, k);
END

zgessm(k,n)
  /* Execution space */
  k = 0..( (Amt < Ant) ? Amt-1 : Ant-1 )
  n = 0..Bnt-1

  /* A == IPIV(k,k) */
  /* B == A(k,k) */
  /* C == B(k,n) */
  /* D == B(k,n1) */
  /* E == B(m,n1) */

:B(k, n)

  READ  A <- IPIV zgessm_inAIPIV(k)                     [type = PIVOT]
  READ  B <- A zgessm_inAIPIV(k)
  RW    C <- (k == 0) ? B(k,n) : E zssssm(k-1, k, n) 
          -> (Amt>=(k+2)) ? D zssssm(k, k+1, n) 
          -> (Amt==(k+1)) ? B(k,n)

  /*

  */

BODY

   int tempkm   = ( k == (Amt-1) ) ? Am - k * Amb : Amb;
   int tempnn   = ( n == (Bnt-1) ) ? Bn - n * Bnb : Bnb;
   int tempkmin;

   if ( Amt < Ant ) {
     tempkmin = (k == Amt-1) ? Am - k * Amb : Amb;
   } else {
     tempkmin = (k == Ant-1) ? An - k * Amb : Amb;
   }
   DRYRUN(
          int ldak     = Amb; /*((k+(Ai/Amb))<Alm1) ? (Amb) : (Alm%Amb);*/
          int ldbk     = Bmb; /*((k+(Bi/Bmb))<Blm1) ? (Bmb) : (Blm%Bmb);*/

	   CORE_zgessm(tempkm, tempnn, tempkmin, ib, 
                       A /* IPIV(k,k) */, 
                       B /* A(k,k) */, ldak, 
                       C /* B(k,n) */, ldbk );
          );

   printlog("thread %d   CORE_zgessm(%d, %d)\n\t(%d, %d, %d, %d, IPIV(%d,%d)[%p], A(%d,%d)[%p], ldak, B(%d,%d)[%p], ldbk)\n",
            context->eu_id, tempkm, tempnn, tempkmin, ib, k, n, k, k, A, k, k, B, k, n, C);

END

/**************************************************
 *                      ZSSSSM                    *
 **************************************************/
zssssm_inALIPIV(k, m)  [profile = off]
k = 0..( (Amt < Ant) ? Amt-1 : Ant-1 )
m = k+1..Amt-1

:A(m, k)

READ A <- A(m, k)
       -> G zssssm(k, m, 0..Bnt-1) 
     L <- L(m, k)                            [type = SMALL_L]
       -> F zssssm(k, m, 0..Bnt-1)           [type = SMALL_L]
     IPIV <- IPIV(m, k)                      [type = PIVOT]
          -> H zssssm(k, m, 0..Bnt-1)        [type = PIVOT]  

BODY
        /* Nothing */
        printlog("thread %d zssssm_inALIPIV( %d, %d )\n", 
                 context->eu_id, k, m);
END

zssssm_outB(k, n1)  [profile = off]
k = 0..( (Amt <= Ant) ? Amt-2 : Ant-1 )
n1 = 0..Bnt-1

:B(k, n1)

     READ B <- D zssssm(k, Amt-1, n1)
            -> B(k, n1)
BODY
        /* Nothing */
        printlog("thread %d zssssm_outB( %d, %d )\n", 
                 context->eu_id, k, n1);
END

zssssm(k,m,n1)
  /* Execution space */
  k = 0..( (Amt < Ant) ? Amt-1 : Ant-1 )
  m = k+1..Amt-1
  n1 = 0..Bnt-1

  /* C == B(k,n) */
  /* D == B(k,n1) */
  /* E == B(m,n1) */
  /* F == L(m,k) */
  /* G == A(m,k) */
  /* H == IPIV(m,k) */

:B(m, n1)

  RW    D <- ( m == (1+k) ) ? C zgessm(m-1, n1) : D zssssm(k, m-1, n1)
          -> (Amt==(m+1)) ? B zssssm_outB(k, n1)
          -> (Amt>=(m+2)) ? D zssssm(k, m+1, n1) 
  RW    E <- (0==k) ? B(m,n1) : E zssssm(k-1, m, n1) 
          -> (m>=(k+2)) & (Ant>=(k+2)) ? E zssssm(k+1, m, n1) 
          -> (Ant==(k+1)) ? B(m,n1)
          -> ((1+k)==m) & (Ant>=(2+k)) ? C zgessm(m, n1) 
  READ  F <- L zssssm_inALIPIV(k, m)         [type = SMALL_L]
  READ  G <- A zssssm_inALIPIV(k, m)         
  READ  H <- IPIV zssssm_inALIPIV(k, m)      [type = PIVOT]

  /*

  */

BODY

  int tempmm = ((m) ==(Amt-1)) ? (Am -( m*Amb)) : (Amb);
  int tempnn = ((n1)==(Bnt-1)) ? (Bn -(n1*Bnb)) : (Bnb);
  int tempkn = ((k) ==(Ant-1)) ? (An -( k*Anb)) : (Anb);
  int ldbk   = Bmb; /*((k+(Bi/Bmb))<Blm1) ? (Bmb) : (Blm%Bmb);*/
  int ldbm   = Bmb; /*((m+(Bi/Bmb))<Blm1) ? (Bmb) : (Blm%Bmb);*/
  int ldam   = Amb; /*((m+(Ai/Amb))<Alm1) ? (Amb) : (Alm%Amb);*/

  DRYRUN(
         CORE_zssssm(Anb, tempnn, tempmm, 
                     tempnn, tempkn, ib, 
                     D /* B(k,n1) */, ldbk, 
                     E /* B(m,n1) */, ldbm, 
                     F /* L(m,k) */,  Lmb, 
                     G /* A(m,k) */,  ldam, 
                     H /* IPIV(m,k) */ );
         );
  printlog("thread %d   CORE_zssssm(%d, %d, %d)\n\t(%d, %d, %d, %d, %d, %d, B(%d,%d)[%p], %d, B(%d,%d)[%p], %d, L(%d,%d)[%p], %d, A(%d,%d)[%p], %d, IPIV(%d,%d)[%p])\n",
           context->eu_id, Anb, tempnn, tempmm, tempnn, tempkn, ib, k, m, n1, k, n1, D, ldbk, m, n1, E, ldbm, m, k, F, Lmb, m, k, G, ldam, m, k, H);

END
