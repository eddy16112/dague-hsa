if( PLASMA_FOUND )

  set(SPOTRF_REQUIRED_LIBRARIES ${PLASMA_LIBRARIES} ${BLAS_LIBRARIES} ${EXTRA_LIBS})
  set(GPU_SUPPORT "")

  if( CUDA_FOUND)
#   set(CUDA_HOST_COMPILATION_CPP OFF)
    set(CUDA_BUILD_CUBIN ON)
    set(CUDA_BUILD_EMULATION OFF)
    set(SPOTRF_REQUIRED_LIBRARIES ${SPOTRF_REQUIRED_LIBRARIES} ${CUDA_CUBLAS_LIBRARIES} ${CUDA_CUDA_LIBRARY} ${CUDA_CUDART_LIBRARY})

    set(CUDA_NVCC_FLAGS -maxrregcount 32 -arch sm_11)
    cuda_add_library( sgemm-sm_11 sgemm.cu)
    set(CUDA_NVCC_FLAGS -maxrregcount 32 -arch sm_13)
    cuda_add_library( sgemm-sm_13 sgemm.cu)
    set(CUDA_NVCC_FLAGS -arch sm_20)
    cuda_add_library( sgemm-sm_20 sgemm_fermi.cu)
    set(GPU_SUPPORT gpu_gemm.c)
  endif (CUDA_FOUND)

  if( DAGUE_MPI AND MPI_FOUND )
    add_executable(mpi_sposv_rl sposv.c ${GPU_SUPPORT})
    set_target_properties(mpi_sposv_rl PROPERTIES LINKER_LANGUAGE Fortran)
    set_target_properties(mpi_sposv_rl PROPERTIES COMPILE_FLAGS "${MPI_COMPILE_FLAGS} -DADD_ -DUSE_MPI")
    set_target_properties(mpi_sposv_rl PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS} ${LOCAL_FORTRAN_LINK_FLAGS}")
    target_link_libraries(mpi_sposv_rl dplasma-mpi dague-mpi dague_distribution_matrix-mpi ${MPI_LIBRARIES} ${SPOTRF_REQUIRED_LIBRARIES})

    add_executable(mpi_sposv_ll sposv.c ${GPU_SUPPORT})
    set_target_properties(mpi_sposv_ll PROPERTIES LINKER_LANGUAGE Fortran)
    set_target_properties(mpi_sposv_ll PROPERTIES COMPILE_FLAGS "${MPI_COMPILE_FLAGS} -DADD_ -DUSE_MPI -DLLT_LL")
    set_target_properties(mpi_sposv_ll PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS} ${LOCAL_FORTRAN_LINK_FLAGS}")
    target_link_libraries(mpi_sposv_ll dplasma-mpi dague-mpi dague_distribution_matrix-mpi ${MPI_LIBRARIES} ${SPOTRF_REQUIRED_LIBRARIES})
  else()
    add_executable(sposv_rl sposv.c ${GPU_SUPPORT})
    set_target_properties(sposv_rl PROPERTIES LINKER_LANGUAGE Fortran)
    set_target_properties(sposv_rl PROPERTIES COMPILE_FLAGS "-DADD_")
    set_target_properties(sposv_rl PROPERTIES LINK_FLAGS "${LOCAL_FORTRAN_LINK_FLAGS}")
    target_link_libraries(sposv_rl dplasma dague dague_distribution_matrix ${SPOTRF_REQUIRED_LIBRARIES})

    add_executable(sposv_ll sposv.c ${GPU_SUPPORT})
    set_target_properties(sposv_ll PROPERTIES LINKER_LANGUAGE Fortran)
    set_target_properties(sposv_ll PROPERTIES COMPILE_FLAGS "-DADD_ -DLLT_LL")
    set_target_properties(sposv_ll PROPERTIES LINK_FLAGS "${LOCAL_FORTRAN_LINK_FLAGS}")
    target_link_libraries(sposv_ll dplasma dague dague_distribution_matrix ${SPOTRF_REQUIRED_LIBRARIES})
  endif( DAGUE_MPI AND MPI_FOUND )

 set(DPOTRF_REQUIRED_LIBRARIES ${PLASMA_LIBRARIES} ${BLAS_LIBRARIES} ${EXTRA_LIBS})
 set(GPU_SUPPORT "")
           
 if( DAGUE_MPI AND MPI_FOUND )
   add_executable(mpi_dposv dposv.c)
   set_target_properties(mpi_dposv PROPERTIES LINKER_LANGUAGE Fortran)
   set_target_properties(mpi_dposv PROPERTIES COMPILE_FLAGS "${MPI_COMPILE_FLAGS} -DADD_ -DUSE_MPI")
   set_target_properties(mpi_dposv PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS} ${LOCAL_FORTRAN_LINK_FLAGS}")
   target_link_libraries(mpi_dposv dplasma-mpi dague-mpi dague_distribution_matrix-mpi ${MPI_LIBRARIES} ${DPOTRF_REQUIRED_LIBRARIES})
 else()                                                                      
   add_executable(dposv dposv.c)
   set_target_properties(dposv PROPERTIES LINKER_LANGUAGE Fortran)
   set_target_properties(dposv PROPERTIES COMPILE_FLAGS "-DADD_")
   set_target_properties(dposv PROPERTIES LINK_FLAGS "${LOCAL_FORTRAN_LINK_FLAGS}")
   target_link_libraries(dposv dplasma dague dague_distribution_matrix ${DPOTRF_REQUIRED_LIBRARIES})
 endif( DAGUE_MPI AND MPI_FOUND )
                                                                   
endif( PLASMA_FOUND )

