#!/usr/bin/env python
# build script for py_dbpreader
# run python setup.py build_ext --inplace to build

from distutils import ccompiler
from distutils.core import setup
from distutils.extension import Extension
from Cython.Distutils import build_ext, extension
import os.path
import sys
import socket

libs = ['irc', 'imf', 'dague-base']
lib_dirs = ['/mnt/scratch/sw/intel/composer_xe_2013/lib/intel64/', '@PROJECT_BINARY_DIR@/dague']
run_dirs = ['/mnt/scratch/sw/intel/composer_xe_2013/lib/intel64/']

ext_modules = [Extension('py_dbpreader', ['@CMAKE_CURRENT_SOURCE_DIR@/py_dbpreader.pyx',
                                          '@CMAKE_CURRENT_SOURCE_DIR@/../dbpreader.c'],
                         include_dirs=['@PROJECT_SOURCE_DIR@/include',
                                       '@PROJECT_SOURCE_DIR@',
                                       '@PROJECT_BINARY_DIR@/include',
                                       '@PROJECT_BINARY_DIR@',
                                       '@CMAKE_CURRENT_SOURCE_DIR@/../'],
                         depends=['setup.py.in',
                                  'py_dbpreader.pxd',
                                  '@CMAKE_CURRENT_BINARY_DIR@/../dbpreader.h',
                                  '@PROJECT_SOURCE_DIR@/include/dbp.h',
                                  '@PROJECT_SOURCE_DIR@/include/os-spec-timing.h'],
                         library_dirs=lib_dirs,
                         runtime_library_dirs=run_dirs,
                         libraries=libs,
                         # extra_compile_args=['@CMAKE_C_FLAGS@']
                     )]

copt = {'icc':[], 'gcc':[], 'unix':[]}
lopt = {}
print('@CMAKE_BUILD_TYPE@')
b_type = '@CMAKE_BUILD_TYPE@'
print('@CMAKE_C_FLAGS_DEBUG@'.split(' '))
print('@CMAKE_C_FLAGS_@CMAKE_BUILD_TYPE@@'.split(' '))
print(ccompiler.show_compilers())
class local_compiler_build_ext( build_ext ):
    def build_extensions(self):
        c = self.compiler.compiler_type
        print('compiler type is ' + c)
        print('compiler is ' + str(self.compiler.__dict__))
        print(copt)
        if copt.has_key(c):
            for e in self.extensions:
                e.extra_compile_args = copt[ c ]
        print(lopt)
        if lopt.has_key(c):
            for e in self.extensions:
                e.extra_link_args = lopt[ c ]
        build_ext.build_extensions(self)

setup(
  name = 'dbpreader python interface',
  version='@PACKAGE_VERSION@',
  description='PaRSEC profiling parser',
  url='http://icl.cs.utk.edu/parsec/',
  package_dir={ '': '@CMAKE_CURRENT_BINARY_DIR@' },
  cmdclass = {'build_ext': local_compiler_build_ext},
  ext_modules = ext_modules
)
