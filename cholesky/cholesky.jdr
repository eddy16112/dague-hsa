/* Globals
 * GRIDrows, GRIDcols, NB, SIZE
 */
GRIDrows = 1
GRIDcols = 1
//NB = 120
SIZE = 4
colRANK = 0
rowRANK = 0

// Name
POTRF(k)

// Execution space
k = 0..SIZE-1

// Parallel partitioning
: k % GRIDrows == rowRANK
: k % GRIDcols == colRANK

// Parameters
INOUT T <- (k == 0) ? IN(k, k) : T SYRK(k, k-1)
        -> T TRSM(k, k+1..SIZE-1)
        -> OUT(k, k)

BODY
lapack_spotrf(lapack_lower, NB, T, NB, &info);

END

// Name
SYRK(k, n)

// Execution space
k = 1..SIZE-1
n = 0..k-1

// Parallel partitioning
: k % GRIDrows == rowRANK
: k % GRIDcols == colRANK

//Parameters
IN    A <- C TRSM(n, k)
INOUT T <- (n == 0) ? IN(k, k) : T SYRK(k, n-1)
        -> (n == k-1) ? T POTRF(k) : T SYRK(k, n+1)

BODY
cblas_ssyrk(CblasColMajor,
            CblasLower, CblasNoTrans,
            NB, NB, 1.0, A, NB, 1.0, T, NB );

END

// Name
GEMM(k, m, n)

// Execution space
k = 0..SIZE-1
m = k+1..SIZE-1
n = 0..k-1

// Parallel partitioning
: m % GRIDrows == rowRANK
: k % GRIDcols == colRANK

// Parameters
IN    A <- C TRSM(n, k)
IN    B <- C TRSM(n, m)
INOUT C <- (n == 0) ? IN(m, n) : C GEMM(k, m, n-1)
        -> (n == k-1) ? C TRSM(k, m) : C GEMM(k, m, n+1)

BODY
cblas_sgemm( CblasColMajor,
             CblasNoTrans, CblasTrans,
             1.0, B, NB, A, NB, 1.0, C, NB );

END

// Name
TRSM(k, m)

// Execution space
k = 0..SIZE-1
m = k+1..SIZE-1

// Parallel partitioning
: m % GRIDrows == rowRANK
: k % GRIDcols == colRANK

// Parameters
IN    T <- T POTRF(k)
INOUT C <- (k == 0) ? IN(m, k) : C GEMM(k, m, k-1)
        -> A GEMM(m, m+1..SIZE-1, k)
        -> B GEMM(k+1..m-1, m, k)
        -> A SYRK(m, k)
        -> OUT(k, m)

BODY
cblas_strsm( CblasColMajor,
             CblasRight, CblasLower,
             CblasTrans, CblasNonUnit,
             NB, NB, 1.0, T, NB, C, NB );

END

